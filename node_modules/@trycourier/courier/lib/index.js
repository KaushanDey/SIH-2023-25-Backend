"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CourierClient = void 0;
var client_1 = require("./client");
var http_client_1 = require("./http-client");
var http_client_2 = require("./http-client");
Object.defineProperty(exports, "CourierHttpClientError", { enumerable: true, get: function () { return http_client_2.CourierHttpClientError; } });
// cannot be `import` as it's not under TS root dir
// tslint:disable-next-line:no-var-requires
var version = require("../package.json").version;
var DEFAULTS = {
    BASE_URL: "https://api.courier.com"
};
var getEnvVariable = function (name) { var _a, _b; return (_b = (_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.process) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b[name]; };
exports.CourierClient = function (options) {
    if (options === void 0) { options = {}; }
    var authorizationToken = options.authorizationToken || getEnvVariable("COURIER_AUTH_TOKEN");
    if (!authorizationToken) {
        throw new Error("Courier Auth Token is required.");
    }
    var baseUrl = options.baseUrl || getEnvVariable("COURIER_BASE_URL") || DEFAULTS.BASE_URL;
    var httpClient = http_client_1.initHttpClient({
        authorizationToken: authorizationToken,
        baseUrl: baseUrl,
        version: version
    });
    var courier = client_1.client({
        httpClient: httpClient
    });
    return courier;
};
